name: Dev Release all project
on:
  push:
    branches:
      - '**'
      - '!master'
      - '!main'
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      REF:
        type: string
        required: true
        description: REF
        default: main
      TAG:
        type: string
        required: true
        description: VERSION_TAG
        default: latest

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ENVIRONMENT: dev

jobs:
  import_varaibles:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      REF: ${{ steps.set-inputs.outputs.REF }}
      TAG: ${{ steps.set-inputs.outputs.TAG }}
      CONTAINER_HOST: ${{ steps.set-vars.outputs.CONTAINER_HOST }}
      APPS: ${{ steps.set-vars.outputs.APPS }}
      ENVIRONMENT: ${{ steps.set-vars.outputs.ENVIRONMENT }}
      IMAGE_REGISTRY: ${{ steps.set-vars.outputs.IMAGE_REGISTRY }}
      RELEASE_FILE: ${{ steps.set-vars.outputs.RELEASE_FILE }}
      VERSION: ${{ steps.set-vars.outputs.VERSION }}
      PRISTINE: ${{ steps.set-vars.outputs.PRISTINE }}
      DEPLOY: ${{ steps.set-vars.outputs.DEPLOY }}
      WRAPPED_JSON: ${{ steps.set-more-vars.outputs.as-json }}

    steps:
      - name: Input parameters
        id: set-inputs
        run: |
          set -euo pipefail
          echo "github.event.inputs.REF: ${{ github.event.inputs.REF }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"

          REF=${{ github.event.inputs.REF || github.head_ref || github.ref_name }}
          TAG=${{ github.event.inputs.TAG || github.run_number }}
          echo "REF=$REF" | tee -a $GITHUB_OUTPUT
          echo "TAG=$TAG" | tee -a $GITHUB_OUTPUT

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.REF }}"

      - name: Export environment variables
        id: set-vars
        run: |
          set -euo pipefail
          DIR="$(pwd)"
          while IFS= read -r line; do
            echo "$line" | tee -a "$GITHUB_OUTPUT"
          done < <(yq eval '.variables | to_entries | .[] | "\(.key)=\(.value)"' "${DIR}/environments/${ENVIRONMENT}/variables.yml")
      
      - name: Export more environment variables
        id: set-more-vars
        run: |
          set -euo pipefail
          DIR="$(pwd)"
          JSON_CONTENT=$(yq eval -o=json "${DIR}/environments/${ENVIRONMENT}/more_variables.yml" | jq -c)
          echo "as-json=$JSON_CONTENT" | tee -a "$GITHUB_OUTPUT"

  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check the variables
        run: |
          echo "====print the ouptus from previous job===="
          echo "REF: ${{ needs.import_varaibles.outputs.REF }}"
          echo "TAG: ${{ needs.import_varaibles.outputs.TAG }}"
          echo "ENVIRONMENT: ${{ needs.import_varaibles.outputs.ENVIRONMENT }}"
          echo "APPS: ${{ needs.import_varaibles.outputs.APPS }}"
          echo "CONTAINER_HOST: ${{ needs.import_varaibles.outputs.CONTAINER_HOST }}"
          echo "IMAGE_REGISTRY: ${{ needs.import_varaibles.outputs.IMAGE_REGISTRY }}"
    needs:
      - import_varaibles

  release-all-project:
    uses: the-gymcoder/workflows-catalog/.github/workflows/release-all.yml@init
    permissions:
      contents: read
      pull-requests: write
    with:
      REF: ${{ needs.import_varaibles.outputs.REF }}
      TAG: ${{ needs.import_varaibles.outputs.TAG }}
      ENVIRONMENT: ${{ needs.import_varaibles.outputs.ENVIRONMENT }}
      APPS: ${{ needs.import_varaibles.outputs.APPS }}
      CONTAINER_HOST: ${{ needs.import_varaibles.outputs.CONTAINER_HOST }}
      IMAGE_REGISTRY: ${{ needs.import_varaibles.outputs.IMAGE_REGISTRY }}
    secrets: inherit
    needs:
      - import_varaibles